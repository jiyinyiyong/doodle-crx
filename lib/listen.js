// Generated by CoffeeScript 1.6.2
var config, connect, delay, global, reconnect, reload;

delay = function(t, f) {
  return setTimeout(f, t);
};

global = {
  hostname: "localhost",
  port: 7776,
  ws: void 0,
  status: true
};

config = {};

try {
  config = localStorage.getItem("config");
} catch (_error) {}

if (config.hostname != null) {
  global.hostname = config.hostname;
}

if (config.port != null) {
  global.port = config.port;
}

connect = function() {
  var h, p;

  h = global.hostname;
  p = global.port;
  console.log(global);
  global.ws = new WebSocket("ws://" + h + ":" + p);
  global.ws.onmessage = function(message) {
    if (global.status === true) {
      if (message.data === 'reload') {
        return reload();
      }
    }
  };
  return global.ws.onclose = function() {
    global.ws = void 0;
    return console.log('closed');
  };
};

reload = function() {
  if (global.status === true) {
    return chrome.tabs.getSelected(function(tab) {
      return chrome.tabs.reload(tab.id);
    });
  }
};

(reconnect = function() {
  if (global.status === true) {
    if (!global.ws) {
      connect();
    }
  }
  console.log("trying...");
  return delay(4000, reconnect);
})();

chrome.browserAction.onClicked.addListener(function(tab) {
  console.log(tab);
  if (global.status === true) {
    chrome.browserAction.setIcon({
      path: "img/d-off.png"
    });
    return global.status = false;
  } else {
    chrome.browserAction.setIcon({
      path: "img/d-on.png"
    });
    return global.status = true;
  }
});

chrome.extension.onRequest.addListener(function(req, sender, res) {
  var hostname, port, _ref, _ref1;

  _ref = req.update, hostname = _ref.hostname, port = _ref.port;
  global.hostname = hostname;
  global.port = port;
  return (_ref1 = global.ws) != null ? _ref1.close() : void 0;
});
